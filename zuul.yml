server:
  port: ${PORT:9900}
spring:
  datasource:
    initialize: true #Only on dev
    url: jdbc:h2:~/prestige;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    username: sa
    password:
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
  h2:
    console:
      enabled: true
      path: /h2

security:
  sessions: stateless
  oauth2:
    client:
      clientId: 3497510f5ee7b609e454
      clientSecret: dd16505eb3f260f0f7705f4eee588decb0884264
      accessTokenUri: https://github.com/login/oauth/access_token
      userAuthorizationUri: https://github.com/login/oauth/authorize
      clientAuthenticationScheme: form
    resource:
      userInfoUri: https://api.github.com/user
github:
  user: OrdinaJworks
  token: 2227b6bf5cd7fbfbbef6d3c76255700b03c42b55
jwt:
  header: Authorization
  secret: 360t00l
  expiration: 604800
  route:
    authentication:
      path: auth
      refresh: refresh
zuul:
  # To remove "Authorization header", the explicit empty list has to be set (http://cloud.spring.io/spring-cloud-netflix/spring-cloud-netflix.html)
  sensitive-headers:
eureka:
  instance:
    preferIpAddress: false
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000
---

logging:
  level:
    org.springframework.security: INFO
spring:
  profiles: cloud
server:
  port: ${PORT}
eureka:
  instance:
    hostname: ${vcap.application.uris[0]}
    metadataMap:
      instanceId: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    non-secure-port: 80
    non-secure-port-enabled: false
    secure-port-enabled: true
  client:
    serviceUrl:
      defaultZone: ${vcap.services.registry.credentials.url}
    healthcheck:
      enabled: true
